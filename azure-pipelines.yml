queue:
  name: Hosted VS2017

steps:
- script: |
    mv global.json src/global.json
  displayName: Futzing with dotnet versions

- task: PowerShell@2
  displayName: 'Setup environment'
  inputs:
    filePath: ./build.ps1
    arguments: '-Target Setup'

- script: |
    mv src/global.json global.json
  displayName: Futzing with dotnet versions

- task: isaacabraham.fsharp-helpers-extension.a2dadf20-1a83-4220-a4ee-b52f6c77f3cf.FAKE5@1
  displayName: Build
  inputs:
    ScriptArguments: 'target Build'

- script: |
    git checkout ./.paket/Paket.Restore.targets
  displayName: Use the shipped paket target

- task: isaacabraham.fsharp-helpers-extension.a2dadf20-1a83-4220-a4ee-b52f6c77f3cf.FAKE5@1
  displayName: Package
  inputs:
    ScriptArguments: 'target Package'

- task: isaacabraham.fsharp-helpers-extension.a2dadf20-1a83-4220-a4ee-b52f6c77f3cf.FAKE5@1
  displayName: 'Tests'
  inputs:
    ScriptArguments: 'target Test'

- task: PublishTestResults@2
  displayName: 'Publish Test Results .testresults/coverage.json'
  inputs:
    testResultsFormat: XUnit

    testResultsFiles: '.testresults/coverage.json'

    mergeTestResults: true

- powershell: |
   ./.fake/codecov/codecov.exe -t $(CodeCov_Token) -f .testresults/coverage.json -v
  failOnStderr: true

  displayName: 'Upload coverage'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: packages'
  inputs:
    PathtoPublish: .packaging

    ArtifactName: packages


- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: test results'
  inputs:
    PathtoPublish: .testresults

    ArtifactName: 'test results'


